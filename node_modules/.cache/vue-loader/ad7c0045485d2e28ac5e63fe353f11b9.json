{"remainingRequest":"/home/musyahid/bootcamp/vue js/vuex/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/musyahid/bootcamp/vue js/vuex/src/views/Users/List.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/musyahid/bootcamp/vue js/vuex/src/views/Users/List.vue","mtime":1600642670662},{"path":"/home/musyahid/bootcamp/vue js/vuex/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/musyahid/bootcamp/vue js/vuex/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/musyahid/bootcamp/vue js/vuex/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/musyahid/bootcamp/vue js/vuex/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IG1hcFN0YXRlLCBtYXBBY3Rpb25zIH0gZnJvbSAidnVleCI7CmltcG9ydCBMb2FkaW5nIGZyb20gJ3Z1ZS1sb2FkaW5nLW92ZXJsYXknOwppbXBvcnQgJ3Z1ZS1sb2FkaW5nLW92ZXJsYXkvZGlzdC92dWUtbG9hZGluZy5jc3MnOwoKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIExvYWRpbmcKICB9LAoKICBuYW1lOiAiVXNlckxpc3QiLAogICAgZGF0YSgpIHsKICAgICAgcmV0dXJuIHsKICAgICAgICBpc0xvYWRpbmc6IGZhbHNlLAogICAgICAgIGZ1bGxQYWdlOiB0cnVlCiAgICAgIH07CiAgICB9LAogIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmlzTG9hZGluZyA9IHRydWU7CiAgICBzZXRUaW1lb3V0KCgpID0+IHsKICAgICAgICB0aGlzLmdldFVzZXIoKTsKICAgICAgdGhpcy5pc0xvYWRpbmcgPSBmYWxzZQogICAgfSwyMDAwKQogIH0sCgogIG1ldGhvZHM6IHsKICAgIC4uLm1hcEFjdGlvbnMoWyJnZXRVc2VyIl0pLAogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIC4uLm1hcFN0YXRlKFsidXNlcnMiXSksCiAgfSwKfTsK"},{"version":3,"sources":["List.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"List.vue","sourceRoot":"src/views/Users","sourcesContent":["<template>\n     <div class=\"w-full p-3\">\n        <div class=\"vld-parent\">\n          <loading :active.sync=\"isLoading\" \n          :can-cancel=\"true\" \n          :on-cancel=\"onCancel\"\n          :is-full-page=\"fullPage\"></loading>\n        </div>\n        <!--Table Card-->\n        <div class=\"bg-white border rounded shadow\">\n            <div class=\"border-b p-3\">\n                <h5 class=\"font-bold uppercase text-gray-600\">Table user</h5>\n            </div>\n            <div class=\"p-5\">\n                <table class=\"w-full p-5 text-gray-700\">\n                    <thead>\n                        <tr>\n                            <th class=\"text-left text-blue-900\">FULL NAME</th>\n                            <th class=\"text-left text-blue-900\">USERNAME</th>\n                            <th class=\"text-left text-blue-900\">EMAIL</th>\n                            <th class=\"text-left text-blue-900\">ACTION</th>\n                        </tr>\n                    </thead>\n\n                    <tbody>\n                        <tr v-for=\"(user, i) in users\" :key=\"i\">\n                            <td>{{user.full_name}}</td>\n                            <td>{{user.username}}</td>\n                            <td>{{user.email}}</td>\n                            <td>\n                                                             <a href=\"\"><router-link\n                            :to=\"{name:'userDetail',params:{id:user.id}}\"\n                            class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-1 px-1 rounded\"\n                            >DETAIL</router-link></a>\n                            </td>\n\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n        <!--/table Card-->\n    </div>\n</template>\n\n<script>\nimport { mapState, mapActions } from \"vuex\";\nimport Loading from 'vue-loading-overlay';\nimport 'vue-loading-overlay/dist/vue-loading.css';\n\nexport default {\n  components: {\n    Loading\n  },\n\n  name: \"UserList\",\n    data() {\n      return {\n        isLoading: false,\n        fullPage: true\n      };\n    },\n  created() {\n    this.isLoading = true;\n    setTimeout(() => {\n        this.getUser();\n      this.isLoading = false\n    },2000)\n  },\n\n  methods: {\n    ...mapActions([\"getUser\"]),\n  },\n  computed: {\n    ...mapState([\"users\"]),\n  },\n};\n</script>"]}]}