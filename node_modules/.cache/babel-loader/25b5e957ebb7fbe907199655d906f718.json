{"remainingRequest":"/home/musyahid/bootcamp/vue js/vuex/node_modules/thread-loader/dist/cjs.js!/home/musyahid/bootcamp/vue js/vuex/node_modules/babel-loader/lib/index.js!/home/musyahid/bootcamp/vue js/vuex/node_modules/eslint-loader/index.js??ref--13-0!/home/musyahid/bootcamp/vue js/vuex/src/store/index.js","dependencies":[{"path":"/home/musyahid/bootcamp/vue js/vuex/src/store/index.js","mtime":1600641781467},{"path":"/home/musyahid/bootcamp/vue js/vuex/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/musyahid/bootcamp/vue js/vuex/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/musyahid/bootcamp/vue js/vuex/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/musyahid/bootcamp/vue js/vuex/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/musyahid/bootcamp/vue js/vuex/src/store/index.js"],"names":["Vue","Vuex","Api","createPersistedState","createModule","router","use","Auth","namespaced","state","token","user","id","fullName","phone","role","username","isError","errorMessage","mutations","saveLogin","payload","full_name","phone_number","actions","reqLogin","commit","post","data","then","res","localStorage","setItem","JSON","stringify","push","catch","error","console","log","Store","score","name","users","products","productsIn","productsOut","detailUser","detailProduct","detailProductIn","downloadAllFile","downloadInFile","downloadOutFile","posts","postLoading","notifications","getUsersList","getProductsList","getProductsInList","getProductsOutList","getDownloadAllFile","getDownloadInFile","getDownloadOutFile","setDetailUser","setDetailProduct","setDetailProductIn","setBoolean","key","value","setDataPost","setPost","getUser","get","getDetailUser","message","getProduct","getDetailProduct","getDetailProductIn","getProductIn","getProductOut","registerAction","email","password","errr","productAction","formData","FormData","append","photo","stock","price","headers","getItem","productOutAction","product_id","total","window","location","reload","productInAction","deleteProduct","delete","deleteProductIn","deleteProductOut","getters","modules","toast","dismissInterval","plugins"],"mappings":"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","sourcesContent":["import Vue from \"vue\";\nimport Vuex from \"vuex\";\n// import Axios from \"axios\";\nimport Api from \"./api\";\nimport createPersistedState from \"vuex-persistedstate\";\nimport { createModule } from 'vuex-toast'\n\nimport router from \"../router/index\";\n\nVue.use(Vuex);\n\n\nconst Auth = {\n  namespaced: true,\n  state: () => ({\n    token: \"\",\n    user: {\n      id: \"\",\n      fullName: \"\",\n      phone: \"\",\n      role: \"\",\n      username: \"\",\n    },\n    isError: false,\n    errorMessage: \"\",\n  }),\n  mutations: {\n    saveLogin(state, payload) {\n      state.token = payload.token;\n      state.user = {\n        id: payload.id,\n        fullName: payload.full_name,\n        phone: payload.phone_number,\n        role: payload.role,\n        username: payload.username,\n      };\n    },\n  },\n  actions: {\n    async reqLogin({ commit }, payload) {\n      // console.log({ reqLogin: true });\n      Api.post(\"/auth/login\", {\n        data: payload,\n      })\n        .then((res) => {\n\n          const {\n            data: { data },\n          } = res;\n          commit(\"saveLogin\", data);\n          localStorage.setItem(\"token\", data.token);\n          // Api.defaults.headers.common['Authorization'] = data.token\n          localStorage.setItem(\n            \"user\",\n            JSON.stringify({\n              id: data.id,\n              fullName: data.full_name,\n              phone: data.phone_number,\n              role: data.role,\n              username: data.username,\n            })\n          );\n          router.push(\"/\");\n\n          // console.log({ res });\n        })\n        .catch((error) => {\n          console.log({ error });\n        });\n      // const { data } = await Api.post(\"/auth/login\", { data: payload });\n      console.log({ commit });\n    },\n  },\n};\n\nexport default new Vuex.Store({\n  state: {\n    score: 0,\n    name: \"\",\n    users: [],\n    products: [],\n    productsIn: [],\n    productsOut: [],\n    detailUser: null,\n    detailProduct: null,\n    detailProductIn: null,\n    downloadAllFile: [],\n    downloadInFile: [],\n    downloadOutFile: [],\n    posts: [],\n    postLoading: false,\n    post: null,\n    notifications: []\n  },\n  mutations: {\n\n    getUsersList(state, payload) {\n      state.users = payload.data;\n    },\n    getProductsList(state, payload) {\n      state.products = payload.data;\n    },\n    getProductsInList(state, payload) {\n      state.productsIn = payload.data;\n    },\n    getProductsOutList(state, payload) {\n      state.productsOut = payload.data;\n    },\n    getDownloadAllFile(state, payload) {\n      state.downloadAllFile = payload.data;\n    },\n    getDownloadInFile(state, payload) {\n      state.downloadInFile = payload.data;\n    },\n    getDownloadOutFile(state, payload) {\n      state.downloadOutFile = payload.data;\n    },\n    setDetailUser(state, payload) {\n      state.detailUser = payload.data;\n    },\n    setDetailProduct(state, payload) {\n      state.detailProduct = payload.data;\n    },\n    setDetailProductIn(state, payload) {\n      state.detailProductIn = payload.data;\n    },\n    setBoolean(state, payload) {\n      console.log({ payload });\n      state[payload.key] = payload.value;\n    },\n    setDataPost(state, payload) {\n      console.log({ state, payload });\n      state.posts = payload.data;\n    },\n    setPost(state, payload) {\n      state.post = payload;\n    },\n  },\n  actions: {\n    // USER\n    async getUser({ commit }) {\n      const { data } = await Api.get('/user')\n      commit(\"getUsersList\", data.data);\n    },\n    async getDetailUser({ commit }, id) {\n      // console.log({ detailuser: id });\n      try {\n        const { data } = await Api.get(`/user/${id}`);\n        // console.log(data);\n        commit(\"setDetailUser\", data);\n      } catch (error) {\n        console.log({ error: error.message });\n      }\n    },\n    // END USER\n\n    //PRODUCT\n    async getProduct({ commit }) {\n      const { data } = await Api.get('/product')\n      commit(\"getProductsList\", data.data);\n    },\n    async getDetailProduct({ commit }, id) {\n      // console.log({ detailuser: id });\n      try {\n        const { data } = await Api.get(`/product/${id}`);\n        console.log(data.data);\n        commit(\"setDetailProduct\",  data);\n      } catch (error) {\n        console.log({ error: error.message });\n      }\n    },\n    async getDetailProductIn({ commit }, id) {\n      console.log(commit)\n      try {\n        const { data } = await Api.get(`/in/${id}`);\n        console.log(data.data);\n        commit(\"setDetailProductIn\",  data);\n      } catch (error) {\n        console.log({ error: error.message });\n      }\n    },\n    async getProductIn({ commit }) {\n      const { data } = await Api.get('/in')\n      commit(\"getProductsInList\", data.data);\n    },\n    \n    async getProductOut({ commit }) {\n      const { data } = await Api.get('/out')\n      commit(\"getProductsOutList\", data.data);\n    },\n\n    //DOWNLOAD FILE\n    async downloadAllFile({ commit }) {\n      const { data } = await Api.get('/print/?type=all')\n      commit(\"getDownloadAllFile\", data.data);\n    },\n\n    async downloadInFile({ commit }) {\n      const { data } = await Api.get('/print/?type=in')\n      commit(\"getDownloadInFile\", data.data);\n    },\n\n    async downloadOutFile({ commit }) {\n      const { data } = await Api.get('/print/?type=out')\n      commit(\"getDownloadOutFile\", data.data);\n    },\n    //END PRODUCT\n\n\n    //REGISTRASI\n    async registerAction({ commit }, payload) {\n      console.log({\"dahaha\": payload})\n      commit(\"setBoolean\", { key: \"postLoading\", value: true });\n      Api.post(\"/auth/signup\", JSON.stringify({\n        \"data\" : {\n          \"full_name\" : payload.full_name,\n          \"username\" : payload.username,\n          \"email\" : payload.email,\n          \"password\" : payload.password,\n          \"phone_number\" : payload.phone_number \n        }\n      }))\n        .then((res) => {\n          console.log({ res });\n        })\n        .catch((errr) => {\n          console.log({ errr: errr.message });\n        });\n      // console.log({ registerAction: data });\n      commit(\"setBoolean\", { key: \"postLoading\", value: false });\n    },\n    //END REGISTRASI\n\n    //========== POST DATA =============================\n    async productAction({ commit }, payload) {\n      commit(\"setBoolean\", { key: \"postLoading\", value: true });\n      const formData = new FormData();\n      formData.append(\"photo\", payload.photo)\n      formData.append(\"name\",  payload.name)\n      formData.append(\"stock\", payload.stock)\n      formData.append(\"price\", payload.price)\n      Api.post(\"/product\", formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          \"Authorization\": `Bearer ${localStorage.getItem(\"token\")}`\n      }\n      })\n        .then((res) => {\n          console.log({ res });\n        })\n        .catch((errr) => {\n          console.log({ errr: errr.message });\n        });\n      // console.log({ registerAction: data });\n      commit(\"setBoolean\", { key: \"postLoading\", value: false });\n    },\n\n    async productOutAction({ commit }, payload) {\n      commit(\"setBoolean\", { key: \"postLoading\", value: true });\n      Api.post(\"/out\", JSON.stringify({\n        \"data\" : {\n          \"product_id\" : payload.product_id,\n          \"total\" : payload.total\n        }\n      }))\n        .then((res) => {\n          console.log({ res });\n          window.location.reload(true);\n        })\n        .catch((errr) => {\n          console.log({ errr: errr.message });\n        });\n      // console.log({ registerAction: data });\n      commit(\"setBoolean\", { key: \"postLoading\", value: false });\n    },\n\n    async productInAction({ commit }, payload) {\n      commit(\"setBoolean\", { key: \"postLoading\", value: true });\n      Api.post(\"/in\", JSON.stringify({\n        \"data\" : {\n          \"product_id\" : payload.product_id,\n          \"total\" : payload.total\n        }\n      }))\n        .then((res) => {\n          console.log({ res });\n          window.location.reload(true);\n        })\n        .catch((errr) => {\n          console.log({ errr: errr.message });\n        });\n      // console.log({ registerAction: data });\n      commit(\"setBoolean\", { key: \"postLoading\", value: false });\n    },\n\n    // ========== DELETE DATA =============================\n    async deleteProduct({ commit }, id) {\n      console.log({\"commit\" : commit, \"id\" : id})\n      Api.delete(\"/product/\" + id)\n        .then((res) => {\n          console.log({ res });\n          window.location.reload(true);\n        })\n        .catch((errr) => {\n          console.log({ errr: errr.message });\n        });\n    },\n    async deleteProductIn({ commit }, id) {\n      console.log({\"commit\" : commit, \"id\" : id})\n      Api.delete(\"/in/\" + id)\n        .then((res) => {\n          console.log({ res });\n          window.location.reload(true);\n        })\n        .catch((errr) => {\n          console.log({ errr: errr.message });\n        });\n    },\n    async deleteProductOut({ commit }, id) {\n      console.log({\"commit\" : commit, \"id\" : id})\n      Api.delete(\"/out/\" + id)\n        .then((res) => {\n          console.log({ res });\n          window.location.reload(true);\n        })\n        .catch((errr) => {\n          console.log({ errr: errr.message });\n        });\n    },\n\n  },\n  getters: {\n    // untuk memanipulasi data state\n    // eventUser(state) {},\n    // oddUser(state) {},\n  },\n  modules: {\n    Auth,\n    toast: createModule({\n      dismissInterval: 8000\n    })\n  },\n  plugins: [createPersistedState()],\n});\n"]}]}