{"remainingRequest":"/home/musyahid/bootcamp/vue js/vuex/node_modules/babel-loader/lib/index.js!/home/musyahid/bootcamp/vue js/vuex/node_modules/eslint-loader/index.js??ref--13-0!/home/musyahid/bootcamp/vue js/vuex/src/store/index.js","dependencies":[{"path":"/home/musyahid/bootcamp/vue js/vuex/src/store/index.js","mtime":1600579524911},{"path":"/home/musyahid/bootcamp/vue js/vuex/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/musyahid/bootcamp/vue js/vuex/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/musyahid/bootcamp/vue js/vuex/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/musyahid/bootcamp/vue js/vuex/src/store/index.js"],"names":["Vue","Vuex","Api","createPersistedState","router","use","Auth","namespaced","state","token","user","id","fullName","phone","role","username","isError","errorMessage","mutations","saveLogin","payload","full_name","phone_number","actions","reqLogin","commit","post","data","then","res","localStorage","setItem","JSON","stringify","push","catch","error","console","log","Store","score","name","users","products","productsIn","productsOut","detailUser","detailProduct","detailProductIn","posts","postLoading","inc","dec","showCount","getUsersList","getProductsList","getProductsInList","getProductsOutList","setDetailUser","setDetailProduct","setDetailProductIn","setBoolean","key","value","setDataPost","setPost","loadCities","getUser","get","getDetailUser","message","getProduct","getDetailProduct","getDetailProductIn","getProductIn","getProductOut","allPost","allpost","detailPost","registerAction","email","password","errr","productAction","formData","FormData","append","photo","stock","price","productOutAction","product_id","total","window","location","reload","productInAction","deleteProduct","delete","deleteProductIn","deleteProductOut","getters","modules","plugins"],"mappings":"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","sourcesContent":["import Vue from \"vue\";\nimport Vuex from \"vuex\";\n// import Axios from \"axios\";\nimport Api from \"./api\";\nimport createPersistedState from \"vuex-persistedstate\";\n\nimport router from \"../router/index\";\n\nVue.use(Vuex);\n\n\nconst Auth = {\n  namespaced: true,\n  state: () => ({\n    token: \"\",\n    user: {\n      id: \"\",\n      fullName: \"\",\n      phone: \"\",\n      role: \"\",\n      username: \"\",\n    },\n    isError: false,\n    errorMessage: \"\",\n  }),\n  mutations: {\n    saveLogin(state, payload) {\n      state.token = payload.token;\n      state.user = {\n        id: payload.id,\n        fullName: payload.full_name,\n        phone: payload.phone_number,\n        role: payload.role,\n        username: payload.username,\n      };\n    },\n  },\n  actions: {\n    async reqLogin({ commit }, payload) {\n      // console.log({ reqLogin: true });\n      Api.post(\"/auth/login\", {\n        data: payload,\n      })\n        .then((res) => {\n\n          const {\n            data: { data },\n          } = res;\n          commit(\"saveLogin\", data);\n          localStorage.setItem(\"token\", data.token);\n          // Api.defaults.headers.common['Authorization'] = data.token\n          localStorage.setItem(\n            \"user\",\n            JSON.stringify({\n              id: data.id,\n              fullName: data.full_name,\n              phone: data.phone_number,\n              role: data.role,\n              username: data.username,\n            })\n          );\n          router.push(\"/dashboard\");\n\n          // console.log({ res });\n        })\n        .catch((error) => {\n          console.log({ error });\n        });\n      // const { data } = await Api.post(\"/auth/login\", { data: payload });\n      console.log({ commit });\n    },\n  },\n};\n\nexport default new Vuex.Store({\n  state: {\n    score: 0,\n    name: \"\",\n    users: [],\n    products: [],\n    productsIn: [],\n    productsOut: [],\n    detailUser: null,\n    detailProduct: null,\n    detailProductIn: null,\n    posts: [],\n    postLoading: false,\n    post: null,\n  },\n  mutations: {\n    // harus syncronus\n    // method(stae,value)\n    inc(state) {\n      state.score++;\n    },\n    dec(state) {\n      state.score--;\n    },\n    showCount(state) {\n      console.log(\"showCount store\");\n      console.log(state.score);\n    },\n    getUsersList(state, payload) {\n      state.users = payload.data;\n    },\n    getProductsList(state, payload) {\n      state.products = payload.data;\n    },\n    getProductsInList(state, payload) {\n      state.productsIn = payload.data;\n    },\n    getProductsOutList(state, payload) {\n      state.productsOut = payload.data;\n    },\n    setDetailUser(state, payload) {\n      state.detailUser = payload.data;\n    },\n    setDetailProduct(state, payload) {\n      state.detailProduct = payload.data;\n    },\n    setDetailProductIn(state, payload) {\n      state.detailProductIn = payload.data;\n    },\n    setBoolean(state, payload) {\n      console.log({ payload });\n      state[payload.key] = payload.value;\n    },\n    setDataPost(state, payload) {\n      console.log({ state, payload });\n      state.posts = payload.data;\n    },\n    setPost(state, payload) {\n      state.post = payload;\n    },\n  },\n  actions: {\n    //action untuk asyncronus\n    async loadCities() {\n      // const {data} = await Axios\n    },\n    async getUser({ commit }) {\n      const { data } = await Api.get('/user')\n      commit(\"getUsersList\", data.data);\n    },\n    async getDetailUser({ commit }, id) {\n      // console.log({ detailuser: id });\n      try {\n        const { data } = await Api.get(`/user/${id}`);\n        // console.log(data);\n        commit(\"setDetailUser\", data);\n      } catch (error) {\n        console.log({ error: error.message });\n      }\n    },\n    async getProduct({ commit }) {\n      const { data } = await Api.get('/product')\n      commit(\"getProductsList\", data.data);\n    },\n    async getDetailProduct({ commit }, id) {\n      // console.log({ detailuser: id });\n      try {\n        const { data } = await Api.get(`/product/${id}`);\n        console.log(data.data);\n        commit(\"setDetailProduct\",  data);\n      } catch (error) {\n        console.log({ error: error.message });\n      }\n    },\n    async getDetailProductIn({ commit }, id) {\n      console.log(commit)\n      try {\n        const { data } = await Api.get(`/in/${id}`);\n        console.log(data.data);\n        commit(\"setDetailProductIn\",  data);\n      } catch (error) {\n        console.log({ error: error.message });\n      }\n    },\n    async getProductIn({ commit }) {\n      const { data } = await Api.get('/in')\n      commit(\"getProductsInList\", data.data);\n    },\n    \n    async getProductOut({ commit }) {\n      const { data } = await Api.get('/out')\n      commit(\"getProductsOutList\", data.data);\n    },\n\n    async allPost({ commit }) {\n      commit(\"setBoolean\", { key: \"postLoading\", value: true });\n      const { data } = await Api.get(\"/posts\");\n      console.log({ allpost: data });\n      commit(\"setDataPost\", { data });\n      commit(\"setBoolean\", { key: \"postLoading\", value: false });\n    },\n    async detailPost({ commit }, id) {\n      commit(\"setBoolean\", { key: \"postLoading\", value: true });\n      const { data } = await Api.get(`/posts/${id}`);\n      commit(\"setPost\", data);\n      // console.log({ data });\n      commit(\"setBoolean\", { key: \"postLoading\", value: false });\n    },\n\n    async registerAction({ commit }, payload) {\n      console.log({\"dahaha\": payload})\n      commit(\"setBoolean\", { key: \"postLoading\", value: true });\n      Api.post(\"/auth/signup\", JSON.stringify({\n        \"data\" : {\n          \"full_name\" : payload.full_name,\n          \"username\" : payload.username,\n          \"email\" : payload.email,\n          \"password\" : payload.password,\n          \"phone_number\" : payload.phone_number \n        }\n      }))\n        .then((res) => {\n          console.log({ res });\n        })\n        .catch((errr) => {\n          console.log({ errr: errr.message });\n        });\n      // console.log({ registerAction: data });\n      commit(\"setBoolean\", { key: \"postLoading\", value: false });\n    },\n    async productAction({ commit }, payload) {\n      commit(\"setBoolean\", { key: \"postLoading\", value: true });\n      const formData = new FormData();\n      formData.append(\"photo\", payload.photo)\n      formData.append(\"name\",  payload.name)\n      formData.append(\"stock\", payload.stock)\n      formData.append(\"price\", payload.price)\n      Api.post(\"/product\",)\n        .then((res) => {\n          console.log({ res });\n        })\n        .catch((errr) => {\n          console.log({ errr: errr.message });\n        });\n      // console.log({ registerAction: data });\n      commit(\"setBoolean\", { key: \"postLoading\", value: false });\n    },\n    async productOutAction({ commit }, payload) {\n      commit(\"setBoolean\", { key: \"postLoading\", value: true });\n      Api.post(\"/out\", JSON.stringify({\n        \"data\" : {\n          \"product_id\" : payload.product_id,\n          \"total\" : payload.total\n        }\n      }))\n        .then((res) => {\n          console.log({ res });\n          window.location.reload(true);\n        })\n        .catch((errr) => {\n          console.log({ errr: errr.message });\n        });\n      // console.log({ registerAction: data });\n      commit(\"setBoolean\", { key: \"postLoading\", value: false });\n    },\n    async productInAction({ commit }, payload) {\n      commit(\"setBoolean\", { key: \"postLoading\", value: true });\n      Api.post(\"/in\", JSON.stringify({\n        \"data\" : {\n          \"product_id\" : payload.product_id,\n          \"total\" : payload.total\n        }\n      }))\n        .then((res) => {\n          console.log({ res });\n          window.location.reload(true);\n        })\n        .catch((errr) => {\n          console.log({ errr: errr.message });\n        });\n      // console.log({ registerAction: data });\n      commit(\"setBoolean\", { key: \"postLoading\", value: false });\n    },\n    async deleteProduct({ commit }, id) {\n      console.log({\"commit\" : commit, \"id\" : id})\n      Api.delete(\"/product/\" + id)\n        .then((res) => {\n          console.log({ res });\n          window.location.reload(true);\n        })\n        .catch((errr) => {\n          console.log({ errr: errr.message });\n        });\n    },\n    async deleteProductIn({ commit }, id) {\n      console.log({\"commit\" : commit, \"id\" : id})\n      Api.delete(\"/in/\" + id)\n        .then((res) => {\n          console.log({ res });\n          window.location.reload(true);\n        })\n        .catch((errr) => {\n          console.log({ errr: errr.message });\n        });\n    },\n    async deleteProductOut({ commit }, id) {\n      console.log({\"commit\" : commit, \"id\" : id})\n      Api.delete(\"/out/\" + id)\n        .then((res) => {\n          console.log({ res });\n          window.location.reload(true);\n        })\n        .catch((errr) => {\n          console.log({ errr: errr.message });\n        });\n    },\n  },\n  getters: {\n    // untuk memanipulasi data state\n    // eventUser(state) {},\n    // oddUser(state) {},\n  },\n  modules: {\n    Auth,\n  },\n  plugins: [createPersistedState()],\n});\n"]}]}