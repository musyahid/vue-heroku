{"remainingRequest":"/home/musyahid/bootcamp/vue js/vuex/node_modules/babel-loader/lib/index.js!/home/musyahid/bootcamp/vue js/vuex/node_modules/eslint-loader/index.js??ref--13-0!/home/musyahid/bootcamp/vue js/vuex/src/store/index.js","dependencies":[{"path":"/home/musyahid/bootcamp/vue js/vuex/src/store/index.js","mtime":1600595621785},{"path":"/home/musyahid/bootcamp/vue js/vuex/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/musyahid/bootcamp/vue js/vuex/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/musyahid/bootcamp/vue js/vuex/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/musyahid/bootcamp/vue js/vuex/src/store/index.js"],"names":["Vue","Vuex","Api","createPersistedState","createModule","router","use","Auth","namespaced","state","token","user","id","fullName","phone","role","username","isError","errorMessage","mutations","saveLogin","payload","full_name","phone_number","actions","reqLogin","commit","post","data","then","res","localStorage","setItem","JSON","stringify","push","catch","error","console","log","Store","score","name","users","products","productsIn","productsOut","detailUser","detailProduct","detailProductIn","downloadAllFile","downloadInFile","downloadOutFile","posts","postLoading","notifications","inc","dec","showCount","getUsersList","getProductsList","getProductsInList","getProductsOutList","getDownloadAllFile","getDownloadInFile","getDownloadOutFile","setDetailUser","setDetailProduct","setDetailProductIn","setBoolean","key","value","setDataPost","setPost","getUser","get","getDetailUser","message","getProduct","getDetailProduct","getDetailProductIn","getProductIn","getProductOut","registerAction","email","password","errr","productAction","formData","FormData","append","photo","stock","price","productOutAction","product_id","total","window","location","reload","productInAction","deleteProduct","delete","deleteProductIn","deleteProductOut","getters","modules","toast","dismissInterval","plugins"],"mappings":"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","sourcesContent":["import Vue from \"vue\";\nimport Vuex from \"vuex\";\n// import Axios from \"axios\";\nimport Api from \"./api\";\nimport createPersistedState from \"vuex-persistedstate\";\nimport { createModule } from 'vuex-toast'\n\nimport router from \"../router/index\";\n\nVue.use(Vuex);\n\n\nconst Auth = {\n  namespaced: true,\n  state: () => ({\n    token: \"\",\n    user: {\n      id: \"\",\n      fullName: \"\",\n      phone: \"\",\n      role: \"\",\n      username: \"\",\n    },\n    isError: false,\n    errorMessage: \"\",\n  }),\n  mutations: {\n    saveLogin(state, payload) {\n      state.token = payload.token;\n      state.user = {\n        id: payload.id,\n        fullName: payload.full_name,\n        phone: payload.phone_number,\n        role: payload.role,\n        username: payload.username,\n      };\n    },\n  },\n  actions: {\n    async reqLogin({ commit }, payload) {\n      // console.log({ reqLogin: true });\n      Api.post(\"/auth/login\", {\n        data: payload,\n      })\n        .then((res) => {\n\n          const {\n            data: { data },\n          } = res;\n          commit(\"saveLogin\", data);\n          localStorage.setItem(\"token\", data.token);\n          // Api.defaults.headers.common['Authorization'] = data.token\n          localStorage.setItem(\n            \"user\",\n            JSON.stringify({\n              id: data.id,\n              fullName: data.full_name,\n              phone: data.phone_number,\n              role: data.role,\n              username: data.username,\n            })\n          );\n          router.push(\"/dashboard\");\n\n          // console.log({ res });\n        })\n        .catch((error) => {\n          console.log({ error });\n        });\n      // const { data } = await Api.post(\"/auth/login\", { data: payload });\n      console.log({ commit });\n    },\n  },\n};\n\nexport default new Vuex.Store({\n  state: {\n    score: 0,\n    name: \"\",\n    users: [],\n    products: [],\n    productsIn: [],\n    productsOut: [],\n    detailUser: null,\n    detailProduct: null,\n    detailProductIn: null,\n    downloadAllFile: [],\n    downloadInFile: [],\n    downloadOutFile: [],\n    posts: [],\n    postLoading: false,\n    post: null,\n    notifications: []\n  },\n  mutations: {\n    // harus syncronus\n    // method(stae,value)\n    inc(state) {\n      state.score++;\n    },\n    dec(state) {\n      state.score--;\n    },\n    showCount(state) {\n      console.log(\"showCount store\");\n      console.log(state.score);\n    },\n    getUsersList(state, payload) {\n      state.users = payload.data;\n    },\n    getProductsList(state, payload) {\n      state.products = payload.data;\n    },\n    getProductsInList(state, payload) {\n      state.productsIn = payload.data;\n    },\n    getProductsOutList(state, payload) {\n      state.productsOut = payload.data;\n    },\n    getDownloadAllFile(state, payload) {\n      state.downloadAllFile = payload.data;\n    },\n    getDownloadInFile(state, payload) {\n      state.downloadInFile = payload.data;\n    },\n    getDownloadOutFile(state, payload) {\n      state.downloadOutFile = payload.data;\n    },\n    setDetailUser(state, payload) {\n      state.detailUser = payload.data;\n    },\n    setDetailProduct(state, payload) {\n      state.detailProduct = payload.data;\n    },\n    setDetailProductIn(state, payload) {\n      state.detailProductIn = payload.data;\n    },\n    setBoolean(state, payload) {\n      console.log({ payload });\n      state[payload.key] = payload.value;\n    },\n    setDataPost(state, payload) {\n      console.log({ state, payload });\n      state.posts = payload.data;\n    },\n    setPost(state, payload) {\n      state.post = payload;\n    },\n  },\n  actions: {\n    // USER\n    async getUser({ commit }) {\n      const { data } = await Api.get('/user')\n      commit(\"getUsersList\", data.data);\n    },\n    async getDetailUser({ commit }, id) {\n      // console.log({ detailuser: id });\n      try {\n        const { data } = await Api.get(`/user/${id}`);\n        // console.log(data);\n        commit(\"setDetailUser\", data);\n      } catch (error) {\n        console.log({ error: error.message });\n      }\n    },\n    // END USER\n\n    //PRODUCT\n    async getProduct({ commit }) {\n      const { data } = await Api.get('/product')\n      commit(\"getProductsList\", data.data);\n    },\n    async getDetailProduct({ commit }, id) {\n      // console.log({ detailuser: id });\n      try {\n        const { data } = await Api.get(`/product/${id}`);\n        console.log(data.data);\n        commit(\"setDetailProduct\",  data);\n      } catch (error) {\n        console.log({ error: error.message });\n      }\n    },\n    async getDetailProductIn({ commit }, id) {\n      console.log(commit)\n      try {\n        const { data } = await Api.get(`/in/${id}`);\n        console.log(data.data);\n        commit(\"setDetailProductIn\",  data);\n      } catch (error) {\n        console.log({ error: error.message });\n      }\n    },\n    async getProductIn({ commit }) {\n      const { data } = await Api.get('/in')\n      commit(\"getProductsInList\", data.data);\n    },\n    \n    async getProductOut({ commit }) {\n      const { data } = await Api.get('/out')\n      commit(\"getProductsOutList\", data.data);\n    },\n\n    //DOWNLOAD FILE\n    async downloadAllFile({ commit }) {\n      const { data } = await Api.get('/print/?type=all')\n      commit(\"getDownloadAllFile\", data.data);\n    },\n\n    async downloadInFile({ commit }) {\n      const { data } = await Api.get('/print/?type=in')\n      commit(\"getDownloadInFile\", data.data);\n    },\n\n    async downloadOutFile({ commit }) {\n      const { data } = await Api.get('/print/?type=out')\n      commit(\"getDownloadOutFile\", data.data);\n    },\n    //END PRODUCT\n\n\n    //REGISTRASI\n    async registerAction({ commit }, payload) {\n      console.log({\"dahaha\": payload})\n      commit(\"setBoolean\", { key: \"postLoading\", value: true });\n      Api.post(\"/auth/signup\", JSON.stringify({\n        \"data\" : {\n          \"full_name\" : payload.full_name,\n          \"username\" : payload.username,\n          \"email\" : payload.email,\n          \"password\" : payload.password,\n          \"phone_number\" : payload.phone_number \n        }\n      }))\n        .then((res) => {\n          console.log({ res });\n        })\n        .catch((errr) => {\n          console.log({ errr: errr.message });\n        });\n      // console.log({ registerAction: data });\n      commit(\"setBoolean\", { key: \"postLoading\", value: false });\n    },\n    //END REGISTRASI\n\n    //========== POST DATA =============================\n    async productAction({ commit }, payload) {\n      commit(\"setBoolean\", { key: \"postLoading\", value: true });\n      const formData = new FormData();\n      formData.append(\"photo\", payload.photo)\n      formData.append(\"name\",  payload.name)\n      formData.append(\"stock\", payload.stock)\n      formData.append(\"price\", payload.price)\n      Api.post(\"/product\", formData, {})\n        .then((res) => {\n          console.log({ res });\n        })\n        .catch((errr) => {\n          console.log({ errr: errr.message });\n        });\n      // console.log({ registerAction: data });\n      commit(\"setBoolean\", { key: \"postLoading\", value: false });\n    },\n\n    async productOutAction({ commit }, payload) {\n      commit(\"setBoolean\", { key: \"postLoading\", value: true });\n      Api.post(\"/out\", JSON.stringify({\n        \"data\" : {\n          \"product_id\" : payload.product_id,\n          \"total\" : payload.total\n        }\n      }))\n        .then((res) => {\n          console.log({ res });\n          window.location.reload(true);\n        })\n        .catch((errr) => {\n          console.log({ errr: errr.message });\n        });\n      // console.log({ registerAction: data });\n      commit(\"setBoolean\", { key: \"postLoading\", value: false });\n    },\n\n    async productInAction({ commit }, payload) {\n      commit(\"setBoolean\", { key: \"postLoading\", value: true });\n      Api.post(\"/in\", JSON.stringify({\n        \"data\" : {\n          \"product_id\" : payload.product_id,\n          \"total\" : payload.total\n        }\n      }))\n        .then((res) => {\n          console.log({ res });\n          window.location.reload(true);\n        })\n        .catch((errr) => {\n          console.log({ errr: errr.message });\n        });\n      // console.log({ registerAction: data });\n      commit(\"setBoolean\", { key: \"postLoading\", value: false });\n    },\n\n    // ========== DELETE DATA =============================\n    async deleteProduct({ commit }, id) {\n      console.log({\"commit\" : commit, \"id\" : id})\n      Api.delete(\"/product/\" + id)\n        .then((res) => {\n          console.log({ res });\n          window.location.reload(true);\n        })\n        .catch((errr) => {\n          console.log({ errr: errr.message });\n        });\n    },\n    async deleteProductIn({ commit }, id) {\n      console.log({\"commit\" : commit, \"id\" : id})\n      Api.delete(\"/in/\" + id)\n        .then((res) => {\n          console.log({ res });\n          window.location.reload(true);\n        })\n        .catch((errr) => {\n          console.log({ errr: errr.message });\n        });\n    },\n    async deleteProductOut({ commit }, id) {\n      console.log({\"commit\" : commit, \"id\" : id})\n      Api.delete(\"/out/\" + id)\n        .then((res) => {\n          console.log({ res });\n          window.location.reload(true);\n        })\n        .catch((errr) => {\n          console.log({ errr: errr.message });\n        });\n    },\n\n  },\n  getters: {\n    // untuk memanipulasi data state\n    // eventUser(state) {},\n    // oddUser(state) {},\n  },\n  modules: {\n    Auth,\n    toast: createModule({\n      dismissInterval: 8000\n    })\n  },\n  plugins: [createPersistedState()],\n});\n"]}]}